/*
 * Copyright(c) Beijing Kungeek Science & Technology Ltd.
 *
 */
package com.kungeek.ftsp.api.infrastructure.core.mvc.handler.requestargs;

import com.kungeek.ftsp.api.util.FtspPageInfo;
import com.kungeek.ftsp.api.util.constants.FtspErrorCode;
import com.kungeek.ftsp.api.util.exception.FtspRequestException;
import com.kungeek.ftsp.api.util.PageType;
import org.apache.commons.lang.StringUtils;
import org.springframework.beans.BeanUtils;
import org.springframework.core.MethodParameter;
import org.springframework.web.bind.support.WebDataBinderFactory;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.method.support.HandlerMethodArgumentResolver;
import org.springframework.web.method.support.ModelAndViewContainer;

/**
 * 分页参数绑定。
 *
 * @version 3.1
 */
public class FtspPageMethodArgumentsResolver implements HandlerMethodArgumentResolver {
    @Override
    public boolean supportsParameter(MethodParameter methodParameter) {
        return FtspPageInfo.class.equals(methodParameter.getParameterType());
    }

    @Override
    public Object resolveArgument(MethodParameter methodParameter, ModelAndViewContainer modelAndViewContainer,
                                  NativeWebRequest nativeWebRequest, WebDataBinderFactory webDataBinderFactory) throws Exception {
        FtspPageInfo ftspPageInfo = (FtspPageInfo) BeanUtils.instantiate(methodParameter.getParameterType());
        setPageSize(nativeWebRequest, ftspPageInfo);
        setIndex(nativeWebRequest, ftspPageInfo);
        return ftspPageInfo;
    }

    private void setIndex(NativeWebRequest nativeWebRequest, FtspPageInfo ftspPageInfo) {
        String indexString = nativeWebRequest.getParameter("index");
        int index;
        if (StringUtils.isEmpty(indexString)) {
            indexString = nativeWebRequest.getParameter("pageIndex");
        }
        if (StringUtils.isEmpty(indexString)) {
            index = 1;
        } else {
            try {
                index = Integer.parseInt(indexString);
            } catch (Exception e) {
                throw new FtspRequestException(FtspErrorCode.CLIENT_PARAM_PAGE_ERROR, "分页参数非数字格式");
            }
            if (index <= 0) {
                index = 1;
            }
        }

        if (nativeWebRequest.getParameter("index") != null) {
            ftspPageInfo.setPageType(PageType.OFFSET);
            ftspPageInfo.setIndex(index);
        } else {
            ftspPageInfo.setPageType(PageType.PAGE);
            ftspPageInfo.setPageIndex(index);
            ftspPageInfo.setIndex((index - 1) * ftspPageInfo.getPageSize() + 1);
        }
    }

    private void setPageSize(NativeWebRequest nativeWebRequest, FtspPageInfo ftspPageInfo) {
        String pageSizeString = nativeWebRequest.getParameter("pageSize");
        int pageSize = 0;

        if (StringUtils.isEmpty(pageSizeString)) {
            pageSize = 10;
        } else {
            try {
                pageSize = Integer.parseInt(pageSizeString);
            } catch (Exception e) {
                throw new FtspRequestException(FtspErrorCode.CLIENT_PARAM_PAGE_ERROR, "分页参数非数字格式");
            }
        }

        if (pageSize <= 0) {
            pageSize = 10;
        }

        ftspPageInfo.setPageSize(pageSize);
    }

}
